<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" dir="ltr"
 lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="KEYWORDS" content="Best use of the www">
  <meta name="robots" content="index,follow">
  <link rel="shortcut icon" href="/favicon.ico">
  <title>Best use of the www</title>
  <style type="text/css" media="screen,projection">/*<![CDATA[*/ @import "/skins/monobook/main.css"; /*]]>*/</style>
  <link rel="stylesheet" type="text/css" media="print"
 href="/skins/common/commonPrint.css">
<!--[if lt IE 5.5000]><style type="text/css">@import "/skins/monobook/IE50Fixes.css";</style><![endif]--><!--[if IE 5.5000]><style type="text/css">@import "/skins/monobook/IE55Fixes.css";</style><![endif]--><!--[if gte IE 6]><style type="text/css">@import "/skins/monobook/IE60Fixes.css";</style><![endif]--><!--[if IE]><script type="text/javascript" src="/skins/common/IEFixes.js"></script>
    <meta http-equiv="imagetoolbar" content="no" /><![endif]-->
  <script type="text/javascript"
 src="/index.php?title=-&amp;action=raw&amp;gen=js"></script>
  <script type="text/javascript" src="/skins/common/wikibits.js"></script>
  <style type="text/css">/*<![CDATA[*/
@import "/index.php?title=MediaWiki:Monobook.css&action=raw&ctype=text/css&smaxage=18000";
@import "/index.php?title=-&action=raw&gen=css&maxage=18000";
/*]]>*/</style>
</head>
<body class="ns-0">
<div id="globalWrapper">
<div id="column-content">
<div id="content"> <a name="top" id="top"></a>
<h1 class="firstHeading">Best use of the www</h1>
<div id="bodyContent">
<!-- start content -->
<p>Anthony Howe
</p>
<p>Snert
</p>
<pre>  42 av. Isola Bella<br>  06400 Cannes, France<br></pre>
<pre>  achowe@snert.com<br></pre>
<table style="width: 442px; height: 109px;" id="toc" class="toc">
  <tbody>
    <tr>
      <td>
      <div id="toctitle">
      <h2>Contents</h2>
      </div>
      <ul>
        <li class="toclevel-1"><a href="#Judges.27_comments"><span
 class="tocnumber">1</span> <span class="toctext">Judges' comments</span></a>
          <ul>
            <li class="toclevel-2"><a href="#To_build"><span
 class="tocnumber">1.1</span> <span class="toctext">To build</span></a></li>
            <li class="toclevel-2"><a href="#Try"><span
 class="tocnumber">1.2</span> <span class="toctext">Try</span></a></li>
          </ul>
        </li>
        <li class="toclevel-1"><a href="#Author.27s_comments"><span
 class="tocnumber">2</span> <span class="toctext">Author's comments</span></a></li>
      </ul>
      </td>
    </tr>
  </tbody>
</table>
<p>
<script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script></p>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="Judges.27_comments"></a>
<h2>Judges' comments</h2>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="To_build"></a>
<h3>To build</h3>
<pre>  cc -O2 -o mynx mynx.c<br></pre>
If this does not work for you, use the enclosed configure script.<br>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="Try"></a>
<h3>Try</h3>
<pre>  mynx <a href="http://www.ioccc.org/" class="external free"
 title="http://www.ioccc.org/" rel="nofollow">http://www.ioccc.org/</a>
</pre>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="Author.27s_comments"></a>
<h2>Author's comments</h2>
<p>I was rather impressed by last year's mini web server. So much so
that it inspired me to try my hand at writing the client side
complement. </p>
<p>A typical build would be command would be:
</p>
<pre>  $ gcc -omynx mynx.c<br></pre>
<p>While some others like to be a little different:
</p>
<pre>  $ gcc -omynx mynx.c -lnsl -lsocket <br>   <br></pre>
<p>I even managed to figure out a basic configure script, given last
year's example, which is kinda of useful when you consider how
many OSes put all the network functions in a variety of places. So
a simpler build command sequence would be:
</p>
<pre>  $ ./configure<br>  $ make<br></pre>
<p>After which, the rest of the documentation can be read by saying:
</p>
<pre>  $ mynx manual.html<br>         <br></pre>
<p>Manifest:
</p>
<pre>       mynx.c<br>       makefile                pre-built generic Un*x<br>       README.TXT<br>       manual.html<br>       makefile.in             makefile template<br>       entities.txt            ISO 8859-1 entites<br>       configure.in            configure script description<br>       configure               pre-built configure script<br></pre>
<br>
</div>
</div>
</div>
</div>
<!-- Served by infong241 in 0.40 secs. -->
</body>
</html>
