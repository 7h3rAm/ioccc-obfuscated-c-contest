<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" dir="ltr"
 lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="KEYWORDS" content="Most discourteous interpreter">
  <meta name="robots" content="index,follow">
  <link rel="shortcut icon" href="/favicon.ico">
  <title>Most discourteous interpreter</title>
  <style type="text/css" media="screen,projection">/*<![CDATA[*/ @import "/skins/monobook/main.css"; /*]]>*/</style>
  <link rel="stylesheet" type="text/css" media="print"
 href="/skins/common/commonPrint.css">
<!--[if lt IE 5.5000]><style type="text/css">@import "/skins/monobook/IE50Fixes.css";</style><![endif]--><!--[if IE 5.5000]><style type="text/css">@import "/skins/monobook/IE55Fixes.css";</style><![endif]--><!--[if gte IE 6]><style type="text/css">@import "/skins/monobook/IE60Fixes.css";</style><![endif]--><!--[if IE]><script type="text/javascript" src="/skins/common/IEFixes.js"></script>
    <meta http-equiv="imagetoolbar" content="no" /><![endif]-->
  <script type="text/javascript"
 src="/index.php?title=-&amp;action=raw&amp;gen=js"></script>
  <script type="text/javascript" src="/skins/common/wikibits.js"></script>
  <style type="text/css">/*<![CDATA[*/
@import "/index.php?title=MediaWiki:Monobook.css&action=raw&ctype=text/css&smaxage=18000";
@import "/index.php?title=-&action=raw&gen=css&maxage=18000";
/*]]>*/</style>
</head>
<body class="ns-0">
<div id="globalWrapper">
<div id="column-content">
<div id="content"> <a name="top" id="top"></a>
<h1 class="firstHeading">Most discourteous interpreter</h1>
<div id="bodyContent">
<!-- start content -->
<p>Arne "Timwi" Heizmann
</p>
<pre>  Germany<br></pre>
<pre>  timwi@gmx.net<br></pre>
<p><br>
</p>
<table style="width: 311px; height: 215px;" id="toc" class="toc">
  <tbody>
    <tr>
      <td>
      <div id="toctitle">
      <h2>Contents</h2>
      </div>
      <ul>
        <li class="toclevel-1"><a href="#Judges.27_notes"><span
 class="tocnumber">1</span> <span class="toctext">Judges' notes</span></a>
          <ul>
            <li class="toclevel-2"><a href="#To_build"><span
 class="tocnumber">1.1</span> <span class="toctext">To build</span></a></li>
            <li class="toclevel-2"><a href="#To_run"><span
 class="tocnumber">1.2</span> <span class="toctext">To run</span></a></li>
          </ul>
        </li>
        <li class="toclevel-1"><a href="#Selected_notes_from_the_author"><span
 class="tocnumber">2</span> <span class="toctext">Selected notes from
the author</span></a>
          <ul>
            <li class="toclevel-2"><a href="#Features"><span
 class="tocnumber">2.1</span> <span class="toctext">Features</span></a></li>
            <li class="toclevel-2"><a href="#Limitations"><span
 class="tocnumber">2.2</span> <span class="toctext">Limitations</span></a></li>
            <li class="toclevel-2"><a href="#Obfuscations"><span
 class="tocnumber">2.3</span> <span class="toctext">Obfuscations</span></a></li>
          </ul>
        </li>
      </ul>
      </td>
    </tr>
  </tbody>
</table>
<p>
<script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script></p>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="Judges.27_notes"></a>
<h2>Judges' notes</h2>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="To_build"></a>
<h3>To build</h3>
<pre>       cc timwi.c -o timwi<br></pre>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="To_run"></a>
<h3>To run</h3>
<pre>       timwi &lt; bf_program<br></pre>
<p>Unlike most BF interpreters that we have been receiving
for the last few years, this one, in our opinion, is the most
obfuscated
albeit the most discourteous to the language it interprets.
A simple 3-character fix will make it slightly less so.
</p>
<p>Quite a few BF programs found on the Net expect byte-based memory,
quite a few exceed the capacity of this interpreter, but there are many
that work. Some small quines work, some don't.
</p>
<p>Why?
</p>
<p><br>
</p>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="Selected_notes_from_the_author"></a>
<h2>Selected notes from the author</h2>
<p><br>
This is an interpreter for the programming language BrainFuck (BF).
</p>
<p>Input must be provided in the following format: First a sequence of
integers
separated by whitespace (this will be the input to the BF program),
then a
colon (:), then the BF program itself.
</p>
<p>Example:
</p>
<pre>   (echo "20&nbsp;: ,--&gt;+.&gt;+.&lt;&lt;[&gt;[&gt;&gt;+&gt;+&lt;&lt;&lt;-]&gt;[&gt;&gt;+&gt;+&lt;&lt;&lt;-]&gt;";<br>    echo "[&lt;+&gt;-]&gt;[&lt;&lt;&lt;+&gt;&gt;&gt;-]&gt;[-]&lt;&lt;&lt;&lt;.&lt;-]") | timwi<br></pre>
<p>This will print the first 20 Fibonacci numbers.
</p>
<p>You must not pass any command-line arguments.
</p>
<p><br>
</p>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="Features"></a>
<h3>Features</h3>
<p><br>
</p>
<ul>
  <li> Supports the complete set of 8 BF instructions (+-&lt;&gt;[].,).
  </li>
</ul>
<ul>
  <li> Supports the use of alternative characters for some of those
instructions. Use this to obfuscate your BF programs! </li>
</ul>
<pre>    For a challenge, figure out what this obfuscated BF program does:<br>    J4mzt?Vazexx-20d~&amp;&amp;~AxdUV!x(~Jz&amp;V)x*(P=J)JUN(dizz)xx_!xx'0&amp;{Vz;}&amp;Jj<br>    It takes two integers as input and outputs one integer.<br></pre>
<ul>
  <li> Ignores all whitespace (newlines, spaces and tabs) in the input
program. </li>
</ul>
<p><br>
</p>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="Limitations"></a>
<h3>Limitations</h3>
<p><br>
Since the program, naturally, uses ints, the calculations must not
exceed the
range of an int. (But then again, you can use the integer overflow to
further
obfuscate your BF programs in creative ways!)
</p>
<p>You are limited to 3125 input integers and 3125 instructions. If you
exceed
one of these limits, the behaviour is undefined.
</p>
<p><br>
</p>
<div class="editsection" style="float: right; margin-left: 5px;"><br>
</div>
<a name="Obfuscations"></a>
<h3>Obfuscations</h3>
<p>Some of the superficial obfuscations are pretty obvious: I'm using
#defines to
make everything look nice and liney, and the program is merely a
recursive
main function with only a single 'return' statement which uses nested
ternary
operators to make even the pre-processed code unreadable.
</p>
<p>However, the more subtle obfuscations relate to the way the program
works.
After applying the pre-processing, you will see a lot of
"1+1+1+...etc.", and
even if you replace these with their result, those numbers will still
not
represent (or even relate to) the ASCII codes of the BF instructions.
</p>
<p>The program will first read in all the input integers, but it will
begin
execution immediately and only read program instructions as they are
needed.
Yet there is no global variable storing how far it has read! Perhaps
the
hardest thing to figure out is how it finds the matching square
brackets.
</p>
<br>
</div>
</div>
</div>
</div>
<!-- Served by infong241 in 1.02 secs. -->
</body>
</html>
